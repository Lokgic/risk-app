{"version":3,"file":"main.721f2d350ecf1f02b158.bundle.js","sources":["webpack:///./components/StackedBar.js"],"sourcesContent":["import {Component} from \"react\"\nimport styled from 'styled-components'\nimport colorGen from '../colorGen'\nimport { Object } from \"es6-shim\";\n\n\nconst StackContainer = styled.div`\n    display:grid;\n    width:100%;\n    height:100%;\n    grid-template-columns:${props=>\n        props.landscape?\n            props.data.map(d=>`${d}fr `)\n        :\"1fr\"};\n    grid-template-rows:${props=>\n        props.landscape? \n            \"1fr\"\n        :props.data.map(d=>`${d}fr `)};\n`\n\nconst Slice = styled.div`\n    background:${props=>props.color};\n`\n\nclass StackedBar extends Component{\n    constructor(props){\n        super(props);\n        const data = props.data;\n        const keys = Object.keys(data)\n        let state = {\n            data,\n            keys,\n            slices:[]\n        }\n\n        this.state = state;\n        this.processStack = this.processStack.bind(this);\n\n    }\n    componentDidMount(){\n        this.setState({slices:this.processStack()});\n    }\n    componentDidUpdate(prevProps,prevState){\n        if (prevProps.data !== this.props.data){\n            this.setState({data:this.props.data});\n        }\n        if (prevState.data!==this.state.data){\n            this.setState({slices:this.processStack()});\n        }\n    }\n    processStack(){\n        const {data,keys} = this.state;\n        return keys.map(d=>data[d].risk)\n    }\n    render(){\n        const {slices,keys} = this.state;\n        const color = colorGen([-1,keys.length]);\n        return (<StackContainer data={slices} landscape={this.props.landscape}>\n            {\n                slices.map((d,i)=><Slice key={`slice_key_${keys[i]}`}color={color(i)}/>)\n            }\n        </StackContainer>)\n    }\n}\n\nexport default StackedBar;"],"mappings":"AAMA","sourceRoot":""}